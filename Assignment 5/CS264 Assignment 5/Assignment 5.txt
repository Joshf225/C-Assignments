For assignment 5 we were tasked to create the factory software design pattern and implement them into each of out previous assignments. I chose the shape factory design pattern for this because I felt just based off of trial and error that the factory method worked best with the way I created each of my assignments, I used abstract classes as well just because of the way my code was implemented. I was then later on told that we had to add style objects user inputs to our assignment 4 by John as I was confused with the style task he gave us. I found this particularly tricky because of the way the Command design pattern is implemented on top of how I have to add my factory design pattern to creating the shape while also allowing user inputs for the styles. For Assignments 2 and 3 were easy enough because I had the styles implemented in them already but I had to add the factory method to creating the shapes for both of them. For this I merged my Shapes class with the factory method basically keeping my shapes class from those assignments(assignments 2 and 3 have practically the same shapes class) and merging it with the shape factory method. At first what I tried to do was simple , I tried to the the shape factory so that whenever a certain shape was called(so id have a method that takes a string called shape which is the shape that the user wants the shape factory to create) based off og the name given I would then create the shape and add it to a variable and then return that.(“shape = new Shape” )This worked although it didn’t allow me to do the user inputs so I had to create separate classes so I could create a create a separate method called styles which takes in two variables both stroke and fill and then my shape strings would have the normal random values but “this.fill” and “this.stroke” instead of random values.(for assignment 3 and 4) for assignment 2 ,again , I had my user inputs for each value so I just implemented the factory method to my assignment 2 shapes class. I feel like doing this for my assignment 2 and 3 really complicated it a bit. It makes it much longer , but makes the process somewhat smoother because to get a shape and add it to my canvas , all I had to do was call the method or function and add my values. For assignment 4 however I felt was the hardest part. Assignment 4 I had to add in user input for style values and also implement my factory method into my command . I may have over complicated it but what I did was, again I took some of the code I used in assignment 2 which were just how I took values from user input and added them to he specific shape that was called, although I had to change around my generate and delete shape command . Assignment 4 I just had simple examples of showing how each shape and command works through my program file so I had no user inout as demonstrators said I could do it this way. So because of this I had to declare new values everytime I wanted to create a new shape .
How I implemented my shapes factory? I based my factory method of the examples from dotnettutorials . I used that and changed it around to work with my code. For example for my Assignment 2 I had numerous ShapeFactory methods for different shapes ,this is how I took in all the values from the user and added to the shape
